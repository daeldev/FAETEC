-- MySQL Script generated by MySQL Workbench
-- Fri Sep 27 16:14:38 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ProvaTarde
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ProvaTarde
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ProvaTarde` ;
USE `ProvaTarde` ;

-- -----------------------------------------------------
-- Table `ProvaTarde`.`Produtos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ProvaTarde`.`Produtos` (
  `cod_barras` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `preco` DECIMAL(10,2) NOT NULL,
  `qtd` INT NOT NULL,
  PRIMARY KEY (`cod_barras`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ProvaTarde`.`Vendas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ProvaTarde`.`Vendas` (
  `cod` INT NOT NULL AUTO_INCREMENT,
  `data` DATE NOT NULL,
  PRIMARY KEY (`cod`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ProvaTarde`.`Itens_vendas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ProvaTarde`.`Itens_vendas` (
  `cod` INT NOT NULL AUTO_INCREMENT,
  `qtd` INT NOT NULL,
  `preco` DECIMAL(10,2) NOT NULL,
  `Vendas_cod` INT NOT NULL,
  `Produtos_cod_barras` INT NOT NULL,
  PRIMARY KEY (`cod`, `Vendas_cod`, `Produtos_cod_barras`),
  INDEX `fk_Vendas_has_Produtos_Produtos1_idx` (`Produtos_cod_barras` ASC),
  INDEX `fk_Vendas_has_Produtos_Vendas_idx` (`Vendas_cod` ASC),
  CONSTRAINT `fk_Vendas_has_Produtos_Vendas`
    FOREIGN KEY (`Vendas_cod`)
    REFERENCES `ProvaTarde`.`Vendas` (`cod`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Vendas_has_Produtos_Produtos1`
    FOREIGN KEY (`Produtos_cod_barras`)
    REFERENCES `ProvaTarde`.`Produtos` (`cod_barras`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

/* Prova 27/09/2007 */
-- 1)
Select P.nome from Itens_vendas as I
inner join Produtos as P on (I.Produtos_cod_barras = P.cod_barras)
inner join Vendas as V on (I.Vendas_cod = V.cod);

-- 2)
Select I.cod, I.qtd, I.preco, P.nome, V.data_venda from Itens_vendas as I
inner join Produtos as P on (I.Produtos_cod_barras = P.cod_barras)
inner join Vendas as V on (I.Vendas_cod = V.cod)
where P.nome = "Toddy";

-- 3)
Select I.cod, I.qtd, I.preco, P.nome, V.data_venda from Itens_vendas as I
inner join Produtos as P on (I.Produtos_cod_barras = P.cod_barras )
inner join Vendas as V on (I.Vendas_cod = V.cod)
where month(V.data_venda) = "05";

-- 4)
Select P.nome from Itens_vendas as I
inner join Produtos as P on (I.Produtos_cod_barras = P.cod_barras)
inner join Vendas as V on (I.Vendas_cod = V.cod);

-- 6)
Select P.nome, sum(I.qtd) as Total_de_vendas, V.data_venda from Itens_vendas as I
inner join Produtos as P on (I.Produtos_cod_barras = P.cod_barras)
inner join Vendas as V on (I.Vendas_cod = V.cod)
where month(V.data_venda) = "05"
group by P.nome, V.data_venda
order by Total_de_vendas DESC;

-- 7)
Select count(I.cod) as Total_de_vendas, V.data_venda from Itens_vendas as I
inner join Produtos as P on (I.Produtos_cod_barras = P.cod_barras)
inner join Vendas as V on (I.Vendas_cod = V.cod)
where month(V.data_venda) = "05"
group by data_venda;

-- 8)
Select avg(TotalPorDia.TotalVendidoDia) as MediaVendasPorDia from (select Vendas.data_venda, sum(Itens_vendas.qtd) as TotalVendidoDia from Vendas
inner join Itens_vendas on Vendas.cod = Itens_vendas.Vendas_cod
where month(Vendas.data_venda) = "05"
group by Vendas.data_venda) as TotalPorDia;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
