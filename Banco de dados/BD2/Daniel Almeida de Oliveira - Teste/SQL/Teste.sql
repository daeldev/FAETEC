-- MySQL Script generated by MySQL Workbench
-- Wed Sep 18 17:40:04 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema TesteBD
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema TesteBD
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `TesteBD` DEFAULT CHARACTER SET utf8 ;
USE `TesteBD` ;

-- -----------------------------------------------------
-- Table `TesteBD`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TesteBD`.`Cliente` (
  `cpf` VARCHAR(15) NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `dtNasc` DATE NOT NULL,
  PRIMARY KEY (`cpf`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TesteBD`.`Modelo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TesteBD`.`Modelo` (
  `codMod` INT NOT NULL,
  `Desc_2` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`codMod`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TesteBD`.`Veiculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TesteBD`.`Veiculo` (
  `placa` VARCHAR(8) NOT NULL,
  `cor` VARCHAR(45) NOT NULL,
  `anoVeiculo` INT NOT NULL,
  `Modelo_codMod` INT NOT NULL,
  `Cliente_cpf` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`placa`, `Modelo_codMod`, `Cliente_cpf`),
  INDEX `fk_Veiculo_Modelo1_idx` (`Modelo_codMod` ASC),
  INDEX `fk_Veiculo_Cliente1_idx` (`Cliente_cpf` ASC),
  CONSTRAINT `fk_Veiculo_Modelo1`
    FOREIGN KEY (`Modelo_codMod`)
    REFERENCES `TesteBD`.`Modelo` (`codMod`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Veiculo_Cliente1`
    FOREIGN KEY (`Cliente_cpf`)
    REFERENCES `TesteBD`.`Cliente` (`cpf`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TesteBD`.`Patio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TesteBD`.`Patio` (
  `num` INT NOT NULL,
  `ender` VARCHAR(45) NOT NULL,
  `capacidade` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`num`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TesteBD`.`Estaciona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TesteBD`.`Estaciona` (
  `cod` INT NOT NULL,
  `Patio_num` INT NOT NULL,
  `Veiculo_placa` VARCHAR(8) NOT NULL,
  `dtEntrada` VARCHAR(10) NOT NULL,
  `dtSaida` VARCHAR(10) NOT NULL,
  `hsEntrada` VARCHAR(10) NOT NULL,
  `hsSaida` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`cod`, `Patio_num`, `Veiculo_placa`),
  INDEX `fk_Patio_has_Veiculo_Veiculo1_idx` (`Veiculo_placa` ASC),
  INDEX `fk_Patio_has_Veiculo_Patio1_idx` (`Patio_num` ASC),
  CONSTRAINT `fk_Patio_has_Veiculo_Patio1`
    FOREIGN KEY (`Patio_num`)
    REFERENCES `TesteBD`.`Patio` (`num`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Patio_has_Veiculo_Veiculo1`
    FOREIGN KEY (`Veiculo_placa`)
    REFERENCES `TesteBD`.`Veiculo` (`placa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- EXERCÍCIOS TESTE BANCO DE DADOS
-- a)
SELECT placa, C.nome FROM Veiculo INNER JOIN Cliente C ON Veiculo.Cliente_cpf = C.cpf;

-- b)
SELECT C.cpf, C.nome, placa FROM Veiculo INNER JOIN Cliente C ON Veiculo.Cliente_cpf = C.cpf WHERE Veiculo.placa = 'JJJ-2020'; 

-- c)
SELECT Veiculo.placa, Veiculo.cor FROM Veiculo INNER JOIN Estaciona e ON Veiculo.placa = e.Veiculo_placa WHERE e.cod = 1;

-- d)
SELECT Veiculo.placa, Veiculo.anoVeiculo FROM Veiculo INNER JOIN estaciona e ON Veiculo.placa = e.veiculo_placa WHERE e.cod = 1;

-- e)
SELECT Veiculo.placa, Veiculo.anoVeiculo, m.Desc_2 FROM Veiculo INNER JOIN modelo m ON Veiculo.modelo_codMod = m.codMod WHERE Veiculo.anoVeiculo >= 2000;